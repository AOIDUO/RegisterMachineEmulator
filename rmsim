#!/usr/bin/env python3

import argparse
import sys

from frontend import Lexer, Parser
from emulator import Emulator
from typing import Callable, List


class RegMachineMain:
    args: argparse.Namespace

    def __init__(self, args: argparse.Namespace):
        self.args = args

    def parse(self):
        """Parse the input file."""
        if self.args.input_file is None:
            f = sys.stdin
        else:
            f = open(self.args.input_file, mode='r')

        lexer = Lexer(f)
        parser = Parser(lexer)
        self.program = parser.parse_input()

    def emulate(self):
        e = Emulator(*self.program)
        e.run()

arg_parser = argparse.ArgumentParser(
    description='1')
arg_parser.add_argument("input_file",
                        type=str,
                        nargs="?",
                        help="Path to input file")
arg_parser.add_argument("-t",
                        "--trace",
                        action='store_true'
                        )

def __main__(args: argparse.Namespace):
    regm_main = RegMachineMain(args)
    regm_main.parse()
    regm_main.emulate()

    if args.trace:
        pass


if __name__ == "__main__":
    args = arg_parser.parse_args()
    __main__(args)
